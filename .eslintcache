[{"C:\\Users\\USER\\Desktop\\build_clock\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\build_clock\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Desktop\\build_clock\\src\\App.js":"3","C:\\Users\\USER\\Desktop\\build_clock\\src\\Set_clock.jsx":"4","C:\\Users\\USER\\Desktop\\build_clock\\src\\Display_clock.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2917,"mtime":1607177341828,"results":"9","hashOfConfig":"7"},{"size":1214,"mtime":1607086203751,"results":"10","hashOfConfig":"7"},{"size":702,"mtime":1607168371431,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rxdgqf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\build_clock\\src\\index.js",[],["24","25"],"C:\\Users\\USER\\Desktop\\build_clock\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\build_clock\\src\\App.js",["26","27","28","29"],"import React,{useState, useEffect} from 'react'\nconst { default: Display_clock } = require(\"./Display_clock\");\nconst { default: Set_clock } = require(\"./Set_clock\");\n\n\nfunction App() {\n  const [state, setstate] = useState({\n    break_count:0.25,\n  session_count:0.5,\n  clock_count:25*60,\n  current_timer:'Session',\n  isPlaying:false\n\n  })\n  const [clock_count, Setclock_count] = useState(state.session_count*60);\n  const [interval, setinterval] = useState(undefined)\n  \n  const break_increment = () => {\n    setstate({\n      ...state,\n      break_count: state.break_count + 1,\n    });\n  };\n  const break_decrement = () => {\n    if(state.break_count >= 1){\n      setstate({\n        ...state,\n        break_count: state.break_count - 1,\n      });\n    }\n    \n    \n  };\n  const session_increment = () => {\n    setstate({\n      ...state,\n      session_count: state.session_count + 1,\n    });\n  };\n  const session_decrement = () => {\n    \n    if(state.session_count >= 1){\n      setstate({\n        ...state,\n        session_count: state.session_count - 1,\n      });\n    }\n  };\n\n //handle clock_count value\n\n  const handle_clock_count = ()=>{\n    Setclock_count(prev=>prev - 1)\n    \n }\n  \n  \n  \n  //convert the clock-count value to real time\n  const convertToTime = (num)=>{\n    const min = Math.floor(num/60);\n    let sec = num % 60;\n    sec= sec < 10 ? `0${sec}` : sec;\n\n    return `${min}:${sec}`\n} \n\n  // handle the pause and play button\n  const pause_play = ()=>{\n    \n      const {isPlaying} = state;\n      if(isPlaying){\n       setstate({\n        ...state,\n         isPlaying:false\n       })\n       clearInterval(interval)\n     }else{\n      \n          setinterval(setInterval(()=>{\n            handle_clock_count()\n          },1000))\n          setstate({\n         ...state,\n          isPlaying:true\n        })\n      }\n\n  }\n  \n//handle reset button\n\nconst reset = ()=>{\n  Setclock_count(state.session_count*60)\n    clearInterval(interval)\n    setstate({\n      ...state,\n      isPlaying:false\n    })\n  \n}\n\nconst app = ()=>{\nif(clock_count===0){\n  setstate({\n    ...state,\n    current_timer:state.current_timer==='Session' ? 'Break' : 'Session',\n  })\n  \n  Setclock_count(state.current_timer==='Session' ? state.session_count*60 : state.break_count*60)\n  console.log(state.current_timer)\n}\n}\n\n\nuseEffect(() => {\n  app()\n}, [pause_play])\n\n\n  return (\n    <div className=\"App\">\n     \n    <Set_clock break_count={state.break_count}\n     session_count={state.session_count}\n     break_count={state.break_count} \n     break_increment={break_increment}\n     break_decrement={break_decrement}\n     session_increment={session_increment}\n     session_decrement={session_decrement}\n     />\n    <Display_clock convertToTime={convertToTime} \n    clock_count={clock_count} \n    pause_play={pause_play}\n    isPlaying={state.isPlaying}\n    reset={reset}\n    current_timer={state.current_timer} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\USER\\Desktop\\build_clock\\src\\Set_clock.jsx",[],"C:\\Users\\USER\\Desktop\\build_clock\\src\\Display_clock.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":118,"column":4,"nodeType":"36","endLine":118,"endColumn":16,"suggestions":"37"},{"ruleId":"38","severity":1,"message":"39","line":124,"column":5,"nodeType":"40","endLine":131,"endColumn":8},{"ruleId":"41","severity":1,"message":"42","line":126,"column":6,"nodeType":"43","endLine":126,"endColumn":37},{"ruleId":"38","severity":1,"message":"44","line":132,"column":5,"nodeType":"40","endLine":137,"endColumn":43},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'app'. Either include it or remove the dependency array.","ArrayExpression",["47"],"react/jsx-pascal-case","Imported JSX component Set_clock must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component Display_clock must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [app, pause_play]",{"range":"50","text":"51"},[2319,2331],"[app, pause_play]"]